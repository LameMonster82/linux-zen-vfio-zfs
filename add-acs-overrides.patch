<!DOCTYPE html>
<html lang='en'>
<head>
<title>add-acs-overrides.patch - aur.git - AUR Package Repositories</title>
<meta name='generator' content='cgit v1.2.1-2-g66f5'/>
<meta name='robots' content='index, nofollow'/>
<link rel='stylesheet' type='text/css' href='/css/cgit.css'/>
<link rel='shortcut icon' href='/images/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='https://aur.archlinux.org/cgit/aur.git/atom/add-acs-overrides.patch?h=linux-vfio' type='application/atom+xml'/>
<link rel='vcs-git' href='https://aur.archlinux.org/linux-vfio.git/' title='aur.git Git repository'/>
</head>
<body>
		<div id="archnavbar" class="anb-aur">
			<div id="archnavbarlogo"><h1><a href="/" title="Return to the main page">Arch Linux User Repository</a></h1></div>
			<div id="archnavbarmenu">
				<ul id="archnavbarlist">
					<li id="anb-home"><a href="https://www.archlinux.org/" title="Arch news, packages, projects and more">Home</a></li>
					<li id="anb-packages"><a href="https://www.archlinux.org/packages/" title="Arch Package Database">Packages</a></li>
					<li id="anb-forums"><a href="https://bbs.archlinux.org/" title="Community forums">Forums</a></li>
					<li id="anb-wiki"><a href="https://wiki.archlinux.org/" title="Community documentation">Wiki</a></li>
					<li id="anb-bugs"><a href="https://bugs.archlinux.org/" title="Report and track bugs">Bugs</a></li>
					<li id="anb-security"><a href="https://security.archlinux.org/" title="Arch Linux Security Tracker">Security</a></li>
					<li id="anb-aur"><a href="/" title="Arch Linux User Repository">AUR</a></li>
					<li id="anb-download"><a href="https://www.archlinux.org/download/" title="Get Arch Linux">Download</a></li>
				</ul>
			</div>
		</div><!-- #archnavbar -->
<div id='cgit'><table id='header'>
<tr>
<td class='main'>AUR : linux-vfio.git</td></tr>
<tr><td class='sub'>AUR Package Repositories | click <a href='/pkgbase/linux-vfio/'>here</a> to return to the package base details page</td><td class='sub right'></td></tr></table>
<table class='tabs'><tr><td>
<a href='/cgit/aur.git/?h=linux-vfio'>summary</a><a href='/cgit/aur.git/log/add-acs-overrides.patch?h=linux-vfio'>log</a><a class='active' href='/cgit/aur.git/tree/add-acs-overrides.patch?h=linux-vfio'>tree</a><a href='/cgit/aur.git/commit/add-acs-overrides.patch?h=linux-vfio'>commit</a><a href='/cgit/aur.git/diff/add-acs-overrides.patch?h=linux-vfio'>diff</a><a href='/cgit/aur.git/stats/add-acs-overrides.patch?h=linux-vfio'>stats</a></td><td class='form'><form class='right' method='get' action='/cgit/aur.git/log/add-acs-overrides.patch'>
<input type='hidden' name='h' value='linux-vfio'/><select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='search' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='path'>path: <a href='/cgit/aur.git/tree/?h=linux-vfio'>root</a>/<a href='/cgit/aur.git/tree/add-acs-overrides.patch?h=linux-vfio'>add-acs-overrides.patch</a></div><div class='content'>blob: aa9b381f6d3030926a0c9b8f078085563c4da9aa (<a href='/cgit/aur.git/plain/add-acs-overrides.patch?h=linux-vfio'>plain</a>)
<table summary='blob content' class='blob'>
<tr><td class='linenumbers'><pre><a id='n1' href='#n1'>1</a>
<a id='n2' href='#n2'>2</a>
<a id='n3' href='#n3'>3</a>
<a id='n4' href='#n4'>4</a>
<a id='n5' href='#n5'>5</a>
<a id='n6' href='#n6'>6</a>
<a id='n7' href='#n7'>7</a>
<a id='n8' href='#n8'>8</a>
<a id='n9' href='#n9'>9</a>
<a id='n10' href='#n10'>10</a>
<a id='n11' href='#n11'>11</a>
<a id='n12' href='#n12'>12</a>
<a id='n13' href='#n13'>13</a>
<a id='n14' href='#n14'>14</a>
<a id='n15' href='#n15'>15</a>
<a id='n16' href='#n16'>16</a>
<a id='n17' href='#n17'>17</a>
<a id='n18' href='#n18'>18</a>
<a id='n19' href='#n19'>19</a>
<a id='n20' href='#n20'>20</a>
<a id='n21' href='#n21'>21</a>
<a id='n22' href='#n22'>22</a>
<a id='n23' href='#n23'>23</a>
<a id='n24' href='#n24'>24</a>
<a id='n25' href='#n25'>25</a>
<a id='n26' href='#n26'>26</a>
<a id='n27' href='#n27'>27</a>
<a id='n28' href='#n28'>28</a>
<a id='n29' href='#n29'>29</a>
<a id='n30' href='#n30'>30</a>
<a id='n31' href='#n31'>31</a>
<a id='n32' href='#n32'>32</a>
<a id='n33' href='#n33'>33</a>
<a id='n34' href='#n34'>34</a>
<a id='n35' href='#n35'>35</a>
<a id='n36' href='#n36'>36</a>
<a id='n37' href='#n37'>37</a>
<a id='n38' href='#n38'>38</a>
<a id='n39' href='#n39'>39</a>
<a id='n40' href='#n40'>40</a>
<a id='n41' href='#n41'>41</a>
<a id='n42' href='#n42'>42</a>
<a id='n43' href='#n43'>43</a>
<a id='n44' href='#n44'>44</a>
<a id='n45' href='#n45'>45</a>
<a id='n46' href='#n46'>46</a>
<a id='n47' href='#n47'>47</a>
<a id='n48' href='#n48'>48</a>
<a id='n49' href='#n49'>49</a>
<a id='n50' href='#n50'>50</a>
<a id='n51' href='#n51'>51</a>
<a id='n52' href='#n52'>52</a>
<a id='n53' href='#n53'>53</a>
<a id='n54' href='#n54'>54</a>
<a id='n55' href='#n55'>55</a>
<a id='n56' href='#n56'>56</a>
<a id='n57' href='#n57'>57</a>
<a id='n58' href='#n58'>58</a>
<a id='n59' href='#n59'>59</a>
<a id='n60' href='#n60'>60</a>
<a id='n61' href='#n61'>61</a>
<a id='n62' href='#n62'>62</a>
<a id='n63' href='#n63'>63</a>
<a id='n64' href='#n64'>64</a>
<a id='n65' href='#n65'>65</a>
<a id='n66' href='#n66'>66</a>
<a id='n67' href='#n67'>67</a>
<a id='n68' href='#n68'>68</a>
<a id='n69' href='#n69'>69</a>
<a id='n70' href='#n70'>70</a>
<a id='n71' href='#n71'>71</a>
<a id='n72' href='#n72'>72</a>
<a id='n73' href='#n73'>73</a>
<a id='n74' href='#n74'>74</a>
<a id='n75' href='#n75'>75</a>
<a id='n76' href='#n76'>76</a>
<a id='n77' href='#n77'>77</a>
<a id='n78' href='#n78'>78</a>
<a id='n79' href='#n79'>79</a>
<a id='n80' href='#n80'>80</a>
<a id='n81' href='#n81'>81</a>
<a id='n82' href='#n82'>82</a>
<a id='n83' href='#n83'>83</a>
<a id='n84' href='#n84'>84</a>
<a id='n85' href='#n85'>85</a>
<a id='n86' href='#n86'>86</a>
<a id='n87' href='#n87'>87</a>
<a id='n88' href='#n88'>88</a>
<a id='n89' href='#n89'>89</a>
<a id='n90' href='#n90'>90</a>
<a id='n91' href='#n91'>91</a>
<a id='n92' href='#n92'>92</a>
<a id='n93' href='#n93'>93</a>
<a id='n94' href='#n94'>94</a>
<a id='n95' href='#n95'>95</a>
<a id='n96' href='#n96'>96</a>
<a id='n97' href='#n97'>97</a>
<a id='n98' href='#n98'>98</a>
<a id='n99' href='#n99'>99</a>
<a id='n100' href='#n100'>100</a>
<a id='n101' href='#n101'>101</a>
<a id='n102' href='#n102'>102</a>
<a id='n103' href='#n103'>103</a>
<a id='n104' href='#n104'>104</a>
<a id='n105' href='#n105'>105</a>
<a id='n106' href='#n106'>106</a>
<a id='n107' href='#n107'>107</a>
<a id='n108' href='#n108'>108</a>
<a id='n109' href='#n109'>109</a>
<a id='n110' href='#n110'>110</a>
<a id='n111' href='#n111'>111</a>
<a id='n112' href='#n112'>112</a>
<a id='n113' href='#n113'>113</a>
<a id='n114' href='#n114'>114</a>
<a id='n115' href='#n115'>115</a>
<a id='n116' href='#n116'>116</a>
<a id='n117' href='#n117'>117</a>
<a id='n118' href='#n118'>118</a>
<a id='n119' href='#n119'>119</a>
<a id='n120' href='#n120'>120</a>
<a id='n121' href='#n121'>121</a>
<a id='n122' href='#n122'>122</a>
<a id='n123' href='#n123'>123</a>
<a id='n124' href='#n124'>124</a>
<a id='n125' href='#n125'>125</a>
<a id='n126' href='#n126'>126</a>
<a id='n127' href='#n127'>127</a>
<a id='n128' href='#n128'>128</a>
<a id='n129' href='#n129'>129</a>
<a id='n130' href='#n130'>130</a>
<a id='n131' href='#n131'>131</a>
<a id='n132' href='#n132'>132</a>
<a id='n133' href='#n133'>133</a>
<a id='n134' href='#n134'>134</a>
<a id='n135' href='#n135'>135</a>
<a id='n136' href='#n136'>136</a>
<a id='n137' href='#n137'>137</a>
<a id='n138' href='#n138'>138</a>
<a id='n139' href='#n139'>139</a>
<a id='n140' href='#n140'>140</a>
<a id='n141' href='#n141'>141</a>
<a id='n142' href='#n142'>142</a>
<a id='n143' href='#n143'>143</a>
<a id='n144' href='#n144'>144</a>
<a id='n145' href='#n145'>145</a>
<a id='n146' href='#n146'>146</a>
<a id='n147' href='#n147'>147</a>
<a id='n148' href='#n148'>148</a>
<a id='n149' href='#n149'>149</a>
<a id='n150' href='#n150'>150</a>
<a id='n151' href='#n151'>151</a>
<a id='n152' href='#n152'>152</a>
<a id='n153' href='#n153'>153</a>
<a id='n154' href='#n154'>154</a>
<a id='n155' href='#n155'>155</a>
<a id='n156' href='#n156'>156</a>
<a id='n157' href='#n157'>157</a>
<a id='n158' href='#n158'>158</a>
<a id='n159' href='#n159'>159</a>
<a id='n160' href='#n160'>160</a>
<a id='n161' href='#n161'>161</a>
<a id='n162' href='#n162'>162</a>
<a id='n163' href='#n163'>163</a>
<a id='n164' href='#n164'>164</a>
<a id='n165' href='#n165'>165</a>
<a id='n166' href='#n166'>166</a>
<a id='n167' href='#n167'>167</a>
<a id='n168' href='#n168'>168</a>
<a id='n169' href='#n169'>169</a>
<a id='n170' href='#n170'>170</a>
<a id='n171' href='#n171'>171</a>
<a id='n172' href='#n172'>172</a>
<a id='n173' href='#n173'>173</a>
<a id='n174' href='#n174'>174</a>
<a id='n175' href='#n175'>175</a>
<a id='n176' href='#n176'>176</a>
<a id='n177' href='#n177'>177</a>
<a id='n178' href='#n178'>178</a>
<a id='n179' href='#n179'>179</a>
<a id='n180' href='#n180'>180</a>
<a id='n181' href='#n181'>181</a>
<a id='n182' href='#n182'>182</a>
<a id='n183' href='#n183'>183</a>
<a id='n184' href='#n184'>184</a>
<a id='n185' href='#n185'>185</a>
<a id='n186' href='#n186'>186</a>
<a id='n187' href='#n187'>187</a>
<a id='n188' href='#n188'>188</a>
<a id='n189' href='#n189'>189</a>
<a id='n190' href='#n190'>190</a>
<a id='n191' href='#n191'>191</a>
<a id='n192' href='#n192'>192</a>
<a id='n193' href='#n193'>193</a>
</pre></td>
<td class='lines'><pre><code>From f56f33917f418568141184eb2503ec65309a8255 Mon Sep 17 00:00:00 2001
From: Mark Weiman &lt;mark.weiman&#64;markzz.com&gt;
Date: Thu, 13 Dec 2018 13:15:16 -0500
Subject: [PATCH] pci: Enable overrides for missing ACS capabilities (4.18)

This an updated version of Alex Williamson&apos;s patch from:
https://lkml.org/lkml/2013/5/30/513

Original commit message follows:
<span class="hl kwa">---</span>
PCIe ACS (Access Control Services) is the PCIe 2.0+ feature that
allows us to control whether transactions are allowed to be redirected
in various subnodes of a PCIe topology.  For instance, if two
endpoints are below a root port or downsteam switch port, the
downstream port may optionally redirect transactions between the
devices, bypassing upstream devices.  The same can happen internally
on multifunction devices.  The transaction may never be visible to the
upstream devices.

One upstream device that we particularly care about is the IOMMU.  If
a redirection occurs in the topology below the IOMMU, then the IOMMU
cannot provide isolation between devices.  This is why the PCIe spec
encourages topologies to include ACS support.  Without it, we have to
assume peer-to-peer DMA within a hierarchy can bypass IOMMU isolation.

Unfortunately, far too many topologies do not support ACS to make this
a steadfast requirement.  Even the latest chipsets from Intel are only
sporadically supporting ACS.  We have trouble getting interconnect
vendors to include the PCIe spec required PCIe capability, let alone
suggested features.

Therefore, we need to add some flexibility.  The pcie_acs_override=
boot option lets users opt-in specific devices or sets of devices to
assume ACS support.  The &quot;downstream&quot; option assumes full ACS support
on root ports and downstream switch ports.  The &quot;multifunction&quot;
option assumes the subset of ACS features available on multifunction
endpoints and upstream switch ports are supported.  The &quot;id:nnnn:nnnn&quot;
option enables ACS support on devices matching the provided vendor
and device IDs, allowing more strategic ACS overrides.  These options
may be combined in any order.  A maximum of 16 id specific overrides
are available.  It&apos;s suggested to use the most limited set of options
necessary to avoid completely disabling ACS across the topology.
Note to hardware vendors, we have facilities to permanently quirk
specific devices which enforce isolation but not provide an ACS
capability.  Please contact me to have your devices added and save
your customers the hassle of this boot option.
<span class="hl kwa">---</span>
 .../admin-guide/kernel-parameters.txt         |   8 ++
 drivers/pci/quirks.c                          | 102 ++++++++++++++++++
 2 files changed, 110 insertions(+)

diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
index 0c404cda531a..0d45f0014f4a 100644
<span class="hl kwa">--- a/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="hl kwb">+++ b/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="hl kwd">&#64;&#64; -3165,6 +3165,14 &#64;&#64;</span>
 		nomsi		[MSI] If the PCI_MSI kernel config parameter is
 				enabled, this kernel boot option can be used to
 				disable the use of MSI interrupts system-wide.
<span class="hl kwb">+		pci_acs_override [PCIE] Override missing PCIe ACS support for:</span>
<span class="hl kwb">+				downstream</span>
<span class="hl kwb">+					All downstream ports - full ACS capabilities</span>
<span class="hl kwb">+				multifunction</span>
<span class="hl kwb">+					Add multifunction devices - multifunction ACS subset</span>
<span class="hl kwb">+				id:nnnn:nnnn</span>
<span class="hl kwb">+					Specific device - full ACS capabilities</span>
<span class="hl kwb">+					Specified as vid:did (vendor/device ID) in hex</span>
 		noioapicquirk	[APIC] Disable all boot interrupt quirks.
 				Safety option to keep boot IRQs enabled. This
 				should never be necessary.
diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index c0673a717239..695d99b390f7 100644
<span class="hl kwa">--- a/drivers/pci/quirks.c</span>
<span class="hl kwb">+++ b/drivers/pci/quirks.c</span>
&#64;&#64; -194,6 +194,106 &#64;&#64; static int __init pci_apply_final_quirks(void)
 }
 fs_initcall_sync(pci_apply_final_quirks);
 
<span class="hl kwb">+static bool acs_on_downstream;</span>
<span class="hl kwb">+static bool acs_on_multifunction;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#define NUM_ACS_IDS 16</span>
<span class="hl kwb">+struct acs_on_id {</span>
<span class="hl kwb">+	unsigned short vendor;</span>
<span class="hl kwb">+	unsigned short device;</span>
<span class="hl kwb">+};</span>
<span class="hl kwb">+static struct acs_on_id acs_on_ids[NUM_ACS_IDS];</span>
<span class="hl kwb">+static u8 max_acs_id;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+static __init int pcie_acs_override_setup(char *p)</span>
<span class="hl kwb">+{</span>
<span class="hl kwb">+	if (!p)</span>
<span class="hl kwb">+		return -EINVAL;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+	while (*p) {</span>
<span class="hl kwb">+		if (!strncmp(p, &quot;downstream&quot;, 10))</span>
<span class="hl kwb">+			acs_on_downstream = true;</span>
<span class="hl kwb">+		if (!strncmp(p, &quot;multifunction&quot;, 13))</span>
<span class="hl kwb">+			acs_on_multifunction = true;</span>
<span class="hl kwb">+		if (!strncmp(p, &quot;id:&quot;, 3)) {</span>
<span class="hl kwb">+			char opt[5];</span>
<span class="hl kwb">+			int ret;</span>
<span class="hl kwb">+			long val;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+			if (max_acs_id &gt;= NUM_ACS_IDS - 1) {</span>
<span class="hl kwb">+				pr_warn(&quot;Out of PCIe ACS override slots (%d)\n&quot;,</span>
<span class="hl kwb">+						NUM_ACS_IDS);</span>
<span class="hl kwb">+				goto next;</span>
<span class="hl kwb">+			}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+			p += 3;</span>
<span class="hl kwb">+			snprintf(opt, 5, &quot;%s&quot;, p);</span>
<span class="hl kwb">+			ret = kstrtol(opt, 16, &amp;val);</span>
<span class="hl kwb">+			if (ret) {</span>
<span class="hl kwb">+				pr_warn(&quot;PCIe ACS ID parse error %d\n&quot;, ret);</span>
<span class="hl kwb">+				goto next;</span>
<span class="hl kwb">+			}</span>
<span class="hl kwb">+			acs_on_ids[max_acs_id].vendor = val;</span>
<span class="hl kwb">+		p += strcspn(p, &quot;:&quot;);</span>
<span class="hl kwb">+		if (*p != &apos;:&apos;) {</span>
<span class="hl kwb">+			pr_warn(&quot;PCIe ACS invalid ID\n&quot;);</span>
<span class="hl kwb">+			goto next;</span>
<span class="hl kwb">+			}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+			p++;</span>
<span class="hl kwb">+			snprintf(opt, 5, &quot;%s&quot;, p);</span>
<span class="hl kwb">+			ret = kstrtol(opt, 16, &amp;val);</span>
<span class="hl kwb">+			if (ret) {</span>
<span class="hl kwb">+				pr_warn(&quot;PCIe ACS ID parse error %d\n&quot;, ret);</span>
<span class="hl kwb">+				goto next;</span>
<span class="hl kwb">+			}</span>
<span class="hl kwb">+			acs_on_ids[max_acs_id].device = val;</span>
<span class="hl kwb">+			max_acs_id++;</span>
<span class="hl kwb">+		}</span>
<span class="hl kwb">+next:</span>
<span class="hl kwb">+		p += strcspn(p, &quot;,&quot;);</span>
<span class="hl kwb">+		if (*p == &apos;,&apos;)</span>
<span class="hl kwb">+			p++;</span>
<span class="hl kwb">+	}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+	if (acs_on_downstream || acs_on_multifunction || max_acs_id)</span>
<span class="hl kwb">+		pr_warn(&quot;Warning: PCIe ACS overrides enabled; This may allow non-IOMMU protected peer-to-peer DMA\n&quot;);</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+	return 0;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+early_param(&quot;pcie_acs_override&quot;, pcie_acs_override_setup);</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+static int pcie_acs_overrides(struct pci_dev *dev, u16 acs_flags)</span>
<span class="hl kwb">+{</span>
<span class="hl kwb">+	int i;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+	/* Never override ACS for legacy devices or devices with ACS caps */</span>
<span class="hl kwb">+	if (!pci_is_pcie(dev) ||</span>
<span class="hl kwb">+		pci_find_ext_capability(dev, PCI_EXT_CAP_ID_ACS))</span>
<span class="hl kwb">+			return -ENOTTY;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+	for (i = 0; i &lt; max_acs_id; i++)</span>
<span class="hl kwb">+		if (acs_on_ids[i].vendor == dev-&gt;vendor &amp;&amp;</span>
<span class="hl kwb">+			acs_on_ids[i].device == dev-&gt;device)</span>
<span class="hl kwb">+				return 1;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+switch (pci_pcie_type(dev)) {</span>
<span class="hl kwb">+	case PCI_EXP_TYPE_DOWNSTREAM:</span>
<span class="hl kwb">+	case PCI_EXP_TYPE_ROOT_PORT:</span>
<span class="hl kwb">+		if (acs_on_downstream)</span>
<span class="hl kwb">+			return 1;</span>
<span class="hl kwb">+		break;</span>
<span class="hl kwb">+	case PCI_EXP_TYPE_ENDPOINT:</span>
<span class="hl kwb">+	case PCI_EXP_TYPE_UPSTREAM:</span>
<span class="hl kwb">+	case PCI_EXP_TYPE_LEG_END:</span>
<span class="hl kwb">+	case PCI_EXP_TYPE_RC_END:</span>
<span class="hl kwb">+		if (acs_on_multifunction &amp;&amp; dev-&gt;multifunction)</span>
<span class="hl kwb">+			return 1;</span>
<span class="hl kwb">+	}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+	return -ENOTTY;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
 /*
  * Decoding should be disabled for a PCI device during BAR sizing to avoid
  * conflict. But doing so may cause problems on host bridge and perhaps other
&#64;&#64; -4513,6 +4613,8 &#64;&#64; static const struct pci_dev_acs_enabled {
 	{ PCI_VENDOR_ID_AMPERE, 0xE00A, pci_quirk_xgene_acs },
 	{ PCI_VENDOR_ID_AMPERE, 0xE00B, pci_quirk_xgene_acs },
 	{ PCI_VENDOR_ID_AMPERE, 0xE00C, pci_quirk_xgene_acs },
<span class="hl kwb">+	/* allow acs for any */</span>
<span class="hl kwb">+	{ PCI_ANY_ID, PCI_ANY_ID, pcie_acs_overrides },</span>
 	{ 0 }
 };
 
<span class="hl kwa">-- </span>
2.20.0

</code></pre></td></tr></table>
</div> <!-- class=content -->
<div id="footer">
	<p>
		Copyright &copy; 2004-2018 aurweb Development Team &ndash;
		<strong>AUR packages are user produced content. Any use of the provided files is at your own risk.</strong>
	</p>
</div>
</div> <!-- id=cgit -->
</body>
</html>
